apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o kubernetes/
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: logger
  name: logger
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: logger
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes/
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: logger
    spec:
      containers:
        - env:
            - name: KAFKA_HOST
              valueFrom:
                secretKeyRef:
                  name: logger-secrets
                  key: KAFKA_HOST
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: logger-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: logger-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: logger-secrets
                  key: AWS_REGION
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: logger-secrets
                  key: S3_BUCKET_NAME
          image: ghcr.io/fis2425/logger:latest
          imagePullPolicy: Always
          name: logger
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3009
              httpHeaders:
              - name: Custom-Header
                value: Awesome
            initialDelaySeconds: 15
            periodSeconds: 5
          ports:
            - containerPort: 3009
              protocol: TCP
      restartPolicy: Always
